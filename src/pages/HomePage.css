/* src/pages/HomePage.css - Vertical Layout with Width Control */

/* --- 1. Main Page Container --- */
.home-content-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 100px 20px;
  box-sizing: border-box;
}

.centered-logo {
  padding-right: 24px;
  width: 100%;
  max-width: 1000px;
  height: auto;
  margin-bottom: 25px;
}

/* --- 2. Form Layout (Vertically Stacked) --- */

/* The wrapper now just controls the overall width and centers its children. */
.input-wrapper {
  display: flex;
  flex-direction: column; /* This ensures a vertical stack */
  align-items: center; /* This centers the items horizontally */
  gap: 15px; /* This is the space between the input and the button */

  /* --- THIS IS HOW YOU CONTROL THE OVERALL FORM WIDTH --- */
  /* To make the form wider or narrower, change this value. */
  width: 100%;
}

/* This targets the input field itself */
.input-wrapper input {
  /* --- THIS IS HOW YOU CONTROL THE INPUT BOX WIDTH --- */
  /* '100%' makes the input box fill the width of its parent (.input-wrapper) */
  width: 700px;

  box-sizing: border-box; /* Important for padding */
  font-family: Helvetica, sans-serif;
  font-size: 1.1rem;
  color: #ffffff;
  height: 40px;
  line-height: 40px;
  padding: 0 20px;
  background-color: #00000068;
  border-style: solid;
  border-width: 2px;
  border-color: #232751ab #bba7c0b1 #bba7c0b1 #232751ab; /* top-right-bottom-left (inverted) */
}

/* ... (Your placeholder and focus styles are perfect) ... */
.input-wrapper input::placeholder {
  color: #48ff9a;
  opacity: 1;
}
.input-wrapper input:focus {
  outline: none;
  box-shadow: 0 0 0 2px #e50000;
}

/* This targets the button */
.input-wrapper button {
  /* --- THIS IS HOW YOU CONTROL THE BUTTON WIDTH --- */
  /* '100%' makes the button the same width as the input box above it.
     If you want it smaller, you can use a pixel value like '150px'. */
  width: 100%;
  max-width: 75px;

  background-color: #e50000;
  color: white;
  border: none;
  font-size: 1rem;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease;
  padding: 10px 0; /* Added vertical padding */
}

.input-wrapper button:hover {
  background-color: #c00000;
}

.thank-you-message {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  line-height: 1px;
  color: #c00000;
}

/* src/pages/HomePage.css */

/* ... (keep all your other CSS rules the same) ... */

@keyframes popUp {
  from {
    transform: translate(
      -50%,
      100%
    ); /* Start centered horizontally, but below the screen */
    opacity: 0;
  }
  to {
    transform: translate(
      -50%,
      0
    ); /* End centered horizontally, at its final bottom position */
    opacity: 1;
  }
}

/* 2. Style the popup image itself */
.brandt-popup {
  position: fixed;

  /* --- THIS IS THE KEY CENTERING FIX --- */
  left: 50%; /* Position the LEFT edge of the image at the screen's center */
  transform: translateX(
    -50%
  ); /* Pull the image back to the left by half its OWN width */

  bottom: 0px; /* Stick it to the bottom */

  /* --- THIS IS THE RESPONSIVE SIZING FIX --- */
  width: 400px; /* This is the MAXIMUM size on large desktops */
  max-width: 50vw; /* On smaller screens, it will be 50% of the viewport width */

  height: auto;
  z-index: 1001;

  /* 3. Apply the animation */
  animation-name: popUp;
  animation-duration: 0.5s;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
}

/* --- A CLEANER MEDIA QUERY for the form --- */
@media (max-width: 768px) {
  .input-wrapper input {
    width: 90vw; /* Make the input take up 90% of the viewport width */
    font-size: 1rem;
  }

  .input-wrapper button {
    width: 90vw; /* Make the button match */
  }
}
